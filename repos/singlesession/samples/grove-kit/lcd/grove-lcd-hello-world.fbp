#!/usr/bin/env sol-fbp-runner
#
# The example prints the string on row 0 and keeps printing a number
# (starting from 1) at each second at the beginning of row 1

lcd(LCDChar:color=255|0|0|255|255|255)

initial_string(constant/string:value="hello, world!") OUT -> PUT_STRING lcd

timer(timer:interval=1000)

timer OUT -> IN _(converter/empty-to-int:output_value=1) OUT -> ROW lcd
timer OUT -> IN _(converter/empty-to-int:output_value=0) OUT -> COL lcd

# filter node needed to bypass accumulator's initial packet, which
# would override the initial string we put
timer OUT -> INC acc(int/accumulator) OUT -> IN filter(int/filter:min=1)
filter OUT -> IN _(converter/int-to-string) OUT -> PUT_STRING lcd
