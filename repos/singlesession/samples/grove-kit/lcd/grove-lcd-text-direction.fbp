#!/usr/bin/env sol-fbp-runner
#
# In this sample, we start to print the alphabet from left to right,
# switch the direction after m and then again after s, just to start
# from the origin again.

timer(timer:interval=1000)
lcd(LCDChar:underline_cursor=true)

# 'a' to 'z'
chars(int/accumulator:initial_value=97,setup_value=min:97|max:122|step:1)
chars OUT -> IN to_byte(converter/int-to-byte)

chars OUT -> IN[0] comp_m(int/equal)
_(constant/int:value=109) OUT -> IN[1] comp_m

to_byte OUT -> OUTPUT_VALUE curr_char(converter/empty-to-byte:output_value=97)
curr_char OUT -> PUT_CHAR lcd

timer OUT -> IN curr_char
timer OUT -> INC chars

comp_m OUT -> IN _(boolean/filter) TRUE -> IN _(boolean/not) OUT -> LEFT_TO_RIGHT lcd

chars OUT -> IN[0] comp_s(int/equal)
_(constant/int:value=115) OUT -> IN[1] comp_s

comp_s OUT -> IN _(boolean/filter) TRUE -> LEFT_TO_RIGHT lcd

chars OVERFLOW -> IN _(converter/empty-to-int:output_value=0) OUT -> COL lcd
