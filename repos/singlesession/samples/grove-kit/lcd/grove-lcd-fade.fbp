#!/usr/bin/env sol-fbp-runner
#
# Here we exemplify the usage of the wave generator node type in order
# to do the original file's looping. There's another example doing
# that by means of the accumulator node -- check
# grove-led-accumulator.fbp
#
# one picture explains what's happening:
#   ___
#  /   \
# /     \_______________________
#             ___
#            /   \
# __________/     \_____________
#                       ___
#                      /   \
# ____________________/     \___

timer(timer:interval=5)
converter(converter/float-to-rgb)
lcd(LCDChar)

initial_string(constant/string:value="fade demo") OUT -> PUT_STRING lcd
initial_color(constant/rgb:value=0|0|0|255|255|255) OUT -> COLOR lcd

# 1520 = 2 * (2 * 100 + 2 * 255) + 100

red_wave(float/wave-generator-trapezoidal:tick_start=1520,min=0,max=255,ticks_inc=255,ticks_dec=255,ticks_at_min=1520,ticks_at_max=100)

# 1520 - (2 * 100 + 2 * 255) = 810
green_wave(float/wave-generator-trapezoidal:tick_start=810,min=0,max=255,ticks_inc=255,ticks_dec=255,ticks_at_min=1520,ticks_at_max=100)

# 1520 - 2 * (2 * 100 + 2 * 255) = 100
blue_wave(float/wave-generator-trapezoidal:tick_start=100,min=0,max=255,ticks_inc=255,ticks_dec=255,ticks_at_min=1520,ticks_at_max=100)

timer OUT -> TICK red_wave OUT -> RED converter
timer OUT -> TICK green_wave OUT -> GREEN converter
timer OUT -> TICK blue_wave OUT -> BLUE converter

converter OUT -> COLOR lcd
